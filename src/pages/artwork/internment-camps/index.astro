---
// Import necessary components and utilities
import { getCollection } from "astro:content";
import CloudinaryImage from "../../../components/CloudinaryImage.astro";
import GalleryLayout from "../../../layouts/GalleryLayout.astro";
import HeartMountainData from '../../../components/data/heart-mountain-data';
import { ArtworkListByCamp } from '../../../components/ArtworkListByCamp';
import Footer from '../../../components/Footer.astro';

// Define the Artwork interface
interface Artwork {
  data: {
    series: string;
    cloudinaryId: string;
    title: string;
    name: string;
    city: string;
    state: string;
    country: string;
    media: string;
    year: string;
    size: string;
    slug: string;
    alt: string;
  };
}

// Fetch all entries from the "artwork" collection
const allEntries = await getCollection("artwork");

// Filter artworks by series
const japaneseAmericanArtworks = allEntries.filter(
  (entry: { data: { series: string } }) => entry.data.series === "Japanese-American Internment Camps"
);
const japaneseCanadianArtworks = allEntries.filter(
  (entry: { data: { series: string } }) => entry.data.series === "Japanese-Canadian Internment Camps"
);

const pageTitle = "Japanese American Internment Camps | Artwork Series";
---

<style>
  section {
    height: 100dvh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    scroll-snap-align: start;
    padding: 2rem 0;
    position: relative;
  }

  .title-section {
    justify-content: flex-start;
    padding-top: 20vh;
  }

  .gallery-image {
    max-height: calc(100dvh - 4rem);
    width: auto;
    object-fit: contain;
  }

  .scroll-indicator {
    position: absolute;
    left: 50%;
    top: 60%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    color: rgba(255, 255, 255, 0.8);
    animation: bounce 2s infinite;
  }

  .preview-image {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 30vh;
    opacity: 0.3;
    background: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.8));
    pointer-events: none;
  }

  .mobile-orientation {
    display: none;
  }

  .back-to-top {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 0.75rem 1.25rem;
    border-radius: 9999px;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0;
    pointer-events: none;
    z-index: 50;
    backdrop-filter: blur(4px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    letter-spacing: 0.025em;
  }

  .back-to-top.visible {
    opacity: 1;
    pointer-events: auto;
  }

  .back-to-top:hover {
    background: rgba(0, 0, 0, 0.9);
    transform: translateY(-2px);
  }

  .back-to-top:focus {
    outline: 2px solid white;
    outline-offset: 2px;
  }

  @media (max-width: 640px) {
    .back-to-top {
      bottom: 1.5rem;
      right: 1.5rem;
      padding: 0.5rem 1rem;
    }
    .back-to-top span {
      display: none;
    }
  }

  @media (max-width: 768px) and (orientation: portrait) {
    .mobile-orientation {
      display: block;
      position: fixed;
      top: 1rem;
      right: 1rem;
      background: rgba(0, 0, 0, 0.8);
      padding: 0.5rem;
      border-radius: 0.5rem;
      font-size: 0.875rem;
      z-index: 50;
    }
  }

  .artwork-link {
    position: relative;
    display: inline-block;
    cursor: zoom-in;
    transition: transform 0.3s ease;
    overflow: hidden;
    width: auto;
    height: auto;
  }

  .artwork-container {
    position: relative;
    overflow: hidden;
  }

  .artwork-indicator {
    position: absolute;
    top: 1rem;
    right: 1rem;
    width: 2.5rem;
    height: 2.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0, 0, 0, 0.5);
    color: white;
    border-radius: 50%;
    opacity: 0.7;
    transition: opacity 0.3s ease;
  }

  .artwork-indicator svg {
    width: 1.25rem;
    height: 1.25rem;
  }

  .artwork-link:hover .artwork-indicator {
    opacity: 1;
  }

  @media (hover: none) {
    .artwork-indicator {
      opacity: 0.7;
    }
  }

  @media (max-width: 640px) {
    .artwork-indicator {
      width: 2rem;
      height: 2rem;
    }
    .artwork-indicator svg {
      width: 1rem;
      height: 1rem;
    }
  }

  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateX(-50%) translateY(0);
    }
    40% {
      transform: translateX(-50%) translateY(-10px);
    }
    60% {
      transform: translateX(-50%) translateY(-5px);
    }
  }
</style>

<script>
  // Back to top functionality
  const backToTop = document.querySelector('.back-to-top');
  const container = document.querySelector('.scroll-container');

  if (container && backToTop) {
    container.addEventListener('scroll', () => {
      if (container.scrollTop > window.innerHeight) {
        backToTop.classList.add('visible');
      } else {
        backToTop.classList.remove('visible');
      }
    });

    backToTop.addEventListener('click', () => {
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
    });
  }
</script>

<GalleryLayout title={pageTitle}>
  <main class="min-h-screen">
    {/* Gallery Section */}
    <article class="gallery-section">
      <div class="mobile-orientation text-white">
        ðŸ“± Rotate phone for best viewing experience
      </div>

      <button 
        class="back-to-top" 
        aria-label="Back to top"
        title="Back to top"
      >
        <span>Back to top</span>
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
        </svg>
      </button>

      <section class="title-section">
        <h1 class="text-museum-white text-center text-4xl md:text-5xl font-bold mb-8">
          Japanese-American Internment Camps
        </h1>
        <p class="text-museum-white text-center text-lg opacity-80 mb-16">
          A collection of artworks documenting the Japanese-American internment camps of World War II
        </p>
        <div class="scroll-indicator">
          <span>Scroll to view artwork</span>
          <svg class="animate-bounce w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
          </svg>
        </div>
        {japaneseAmericanArtworks[0] && (
          <div class="preview-image">
            <CloudinaryImage
              cloudinaryId={japaneseAmericanArtworks[0].data.cloudinaryId}
              title={japaneseAmericanArtworks[0].data.title}
              className="w-full h-full object-cover opacity-30"
            />
          </div>
        )}
      </section>

      {japaneseAmericanArtworks.map((artwork: Artwork) => (
        <section>
          <a href={`/artwork/internment-camps/${artwork.data.slug}`} class="artwork-link">
            <div class="artwork-container">
              <CloudinaryImage
                cloudinaryId={artwork.data.cloudinaryId}
                title={artwork.data.title}
                name={artwork.data.name}
                city={artwork.data.city}
                state={artwork.data.state}
                country={artwork.data.country}
                media={artwork.data.media}
                year={artwork.data.year}
                size={artwork.data.size}
                alt={artwork.data.alt}
                figcaptionClasses="text-museum-white"
                className="w-full h-auto max-h-[90vh] object-contain"
              />
              <div class="artwork-indicator" aria-label="View artwork details">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <circle cx="11" cy="11" r="8"></circle>
                  <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                  <line x1="11" y1="8" x2="11" y2="14"></line>
                  <line x1="8" y1="11" x2="14" y2="11"></line>
                </svg>
              </div>
            </div>
          </a>
        </section>
      ))}
    </article>

    {/* Research and Navigation Section */}
    <div class="w-full bg-white py-20">
      <div class="max-w-none">
        <HeartMountainData client:load />
        <ArtworkListByCamp 
          client:load 
          artworks={japaneseAmericanArtworks.map(artwork => ({
            slug: artwork.data.slug,
            title: artwork.data.title,
            name: artwork.data.name,
            city: artwork.data.city,
            state: artwork.data.state,
          }))} 
        />
      </div>
    </div>

    <Footer />
  </main>
</GalleryLayout>
