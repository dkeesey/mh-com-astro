---
import Layout from "../layouts/Layout.astro";
import ExhibitionImage from "@components/ExhibitionImage.astro";
import PhotographerGrid from "@components/PhotographerGrid.astro";
import { photographers, type Photographer } from "@content/family-album/config";
import { getEntry, getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

interface RenderedSection {
  Content: any; // Astro component type
  data: {
    title: string;
    description?: string;
    [key: string]: any;
  };
}

interface FeaturedPhotographer {
  name: string;
  link: string;
  birthYear: string;
  birthPlace: string;
  deathYear?: string;
  deathPlace?: string;
  camp: string;
  image: string;
  category: 'official' | 'amateur' | 'visitor' | 'canadian';
}

// Initialize variables outside try block
let introData = {
  title: "Family Album Project",
  description: "Default description",
};
let renderedSections: RenderedSection[] = [];
let images = [
  {
    src: "/src/images/family-album/fambanner.jpeg",
    alt: "Family Album Banner",
    caption: "The Family Album Pages",
  },
  {
    src: "/src/images/family-album/install.pic1.jpeg",
    alt: "Installation View 1",
    caption: "Installation view of the Family Album exhibition",
  },
  {
    src: "/src/images/family-album/install.pic3.jpeg",
    alt: "Installation View 2",
    caption: "Another view of the Family Album exhibition",
  },
];
let featuredPhotographers: FeaturedPhotographer[] = [];

try {
  // Load introduction data
  const introduction = await getEntry("family-album", "introduction");
  if (introduction) {
    const rendered = await introduction.render();
    introData = {
      title: introduction.data.title || "Family Album Project",
      description: introduction.data.description || "Default description",
    };
  }

  // Get all family album content sections
  const sections = await getCollection('family-album', (entry) => {
    return entry.id.startsWith('0') && entry.id.endsWith('.mdx');
  });

  // Sort sections by filename (01-, 02-, etc.)
  const sortedSections = sections.sort((a, b) => a.id.localeCompare(b.id));

  // Render each section's content
  renderedSections = await Promise.all(
    sortedSections.map(async (section) => {
      const { Content } = await section.render();
      return { Content, data: section.data };
    })
  );

  // Set up featured photographers
  featuredPhotographers = photographers
    .filter((p) => p.category === "official" || p.category === "amateur")
    .map((p) => ({
      name: p.name,
      link: `/family-album/photographers/${p.id}`,
      birthYear: p.birthYear || "",
      birthPlace: p.birthPlace || "",
      deathYear: p.deathYear,
      deathPlace: p.deathPlace,
      camp: p.camp,
      image: p.image || "",
      category: p.category,
    }));

} catch (error) {
  console.error("Error loading content:", error);
}
---

<Layout title={introData.title} description={introData.description}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 space-y-12">
    {renderedSections.map(({ Content, data }) => (
      <section class="prose max-w-none mb-12">
        <h2 class="text-2xl font-bold mb-4">{data.title}</h2>
        {data.description && <p class="text-lg mb-6">{data.description}</p>}
        <Content />
      </section>
    ))}

    <section>
      <h2 class="text-3xl font-light mb-8">Featured Photographers</h2>
      <PhotographerGrid photographers={featuredPhotographers} />
    </section>

    <section>
      <h2 class="text-3xl font-light mb-8">Exhibition Views</h2>
      <div class="grid gap-8 md:grid-cols-2">
        {images.slice(1).map((image) => (
          <ExhibitionImage
            src={image.src}
            alt={image.alt}
            caption={image.caption}
          />
        ))}
      </div>
    </section>

    <section class="text-center text-sm text-gray-600 border-t pt-8">
      <p>
        This exhibition was funded by the Ohio Arts Council and the artist.
        These web pages and web site are supported by CSU, the Civil Liberties
        Educational Fund, OAC, and the artist.
      </p>
    </section>
  </div>
</Layout>
