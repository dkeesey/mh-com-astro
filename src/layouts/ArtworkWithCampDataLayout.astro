---
import Layout from './Layout.astro';
import CloudinaryImage from "../components/CloudinaryImage.astro";
import { getCollection } from "astro:content";
import { ArtworkListByCamp } from '../components/ArtworkListByCamp';
import type { Artwork } from '../types/artwork';
import type { CollectionEntry } from 'astro:content';

interface Props {
  entry: CollectionEntry<'artwork'>;
}

const { entry } = Astro.props;

// Get all artworks for the navigation
const allArtworks = await getCollection("artwork");

const mapToArtwork = (entry: CollectionEntry<'artwork'>): Artwork => ({
  ...entry.data,
  slug: entry.slug
});

const japaneseAmericanArtworks = allArtworks
  .filter((artwork) => artwork.data.series === "Japanese-American Internment Camps")
  .map(mapToArtwork);

const japaneseCanadianArtworks = allArtworks
  .filter((artwork) => artwork.data.series === "Japanese-Canadian Internment Camps")
  .map(mapToArtwork);

let CampDataComponent;
if (entry.data['data-file']) {
  // Dynamically import the camp data component
  CampDataComponent = await import(`../components/data/${entry.data['data-file']}.jsx`);
} else {
  console.warn(`No data-file specified for ${entry.slug}`);
}
---

<Layout title={entry.data.title}>
  <!-- Full-width image section with black background -->
  <div class="bg-black w-full">
    <div class="max-w-[90vw] mx-auto py-8 sm:py-12 md:py-16 flex justify-center">
      <a href={`/artwork/internment-camps/#${entry.slug}`} class="artwork-link">
        <div class="artwork-container relative">
          <div class="artwork-indicator">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <circle cx="11" cy="11" r="8"></circle>
              <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
              <line x1="8" y1="11" x2="14" y2="11"></line>
            </svg>
          </div>
          <CloudinaryImage
            cloudinaryId={entry.data.cloudinaryId}
            alt={entry.data.altTag}
            title={entry.data.title}
            name={entry.data.name}
            city={entry.data.city}
            state={entry.data.state}
            country={entry.data.country}
            media={entry.data.media}
            year={entry.data.year}
            size={entry.data.size}
            slug={entry.slug}
            figcaptionClasses="text-museum-white bg-black text-center"
          />
        </div>
      </a>
    </div>
  </div>

  <!-- Research section with vintage paper background -->
  <div class="bg-vintage-paper text-vintage-ink w-full py-6 sm:py-8 md:py-12 mt-16 sm:mt-20 md:mt-24">
    <div class="mx-4 sm:mx-6 md:mx-8">
      <div class="camp-data-container max-w-6xl mx-auto">
        {CampDataComponent && <CampDataComponent.default />}
      </div>
    </div>
  </div>

  <!-- Artwork List section -->
  <div class="bg-white w-full py-16">
    <ArtworkListByCamp 
      client:load 
      artworks={japaneseAmericanArtworks}
    />
  </div>

  <style>
    :global(.camp-data) {
      @apply w-full mx-auto;
    }
    
    :global(.camp-data h2) {
      @apply text-xl sm:text-2xl md:text-3xl font-light mb-6 sm:mb-8 md:mb-10 text-center text-vintage-ink font-typewriter;
    }
    
    :global(.camp-data dl) {
      @apply grid gap-y-4 sm:gap-y-6 md:gap-y-8;
    }

    :global(.camp-data dt) {
      @apply text-sm sm:text-base md:text-lg uppercase tracking-wide mb-2 text-vintage-ink/70 font-typewriter;
    }
    
    :global(.camp-data dd) {
      @apply text-sm sm:text-base md:text-lg pl-4 sm:pl-6 md:pl-8 border-l border-vintage-ink/20 text-vintage-ink leading-normal sm:leading-relaxed;
    }

    :global(.camp-data p) {
      @apply text-sm sm:text-base md:text-lg mb-4 sm:mb-6 leading-normal sm:leading-relaxed;
    }

    :global(.camp-data ul) {
      @apply pl-4 sm:pl-6 md:pl-8 list-disc;
    }

    :global(.camp-data li) {
      @apply text-sm sm:text-base md:text-lg mb-3 leading-normal sm:leading-relaxed;
    }

    .camp-data-container {
      @apply shadow-md sm:shadow-lg;
    }

    /* Optimize line length for readability */
    :global(.camp-data dd),
    :global(.camp-data p) {
      @apply max-w-prose;
    }

    .artwork-link {
      position: relative;
      display: inline-block;
      cursor: zoom-out;
      transition: transform 0.3s ease;
      overflow: hidden;
      width: auto;
      height: auto;
    }

    .artwork-container {
      position: relative;
      overflow: hidden;
    }

    .artwork-indicator {
      position: absolute;
      top: 1rem;
      right: 1rem;
      width: 2.5rem;
      height: 2.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      background: rgba(0, 0, 0, 0.5);
      color: white;
      border-radius: 50%;
      opacity: 0.7;
      transition: opacity 0.3s ease;
      z-index: 10;
    }

    .artwork-indicator svg {
      width: 1.25rem;
      height: 1.25rem;
    }

    .artwork-link:hover .artwork-indicator {
      opacity: 1;
      background: rgba(0, 0, 0, 0.8);
    }

    @media (hover: none) {
      .artwork-indicator {
        opacity: 0.7;
      }
    }

    @media (max-width: 640px) {
      .artwork-indicator {
        width: 2rem;
        height: 2rem;
      }
      .artwork-indicator svg {
        width: 1rem;
        height: 1rem;
      }
    }
  </style>
</Layout>